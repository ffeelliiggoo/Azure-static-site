trigger:
- master

variables:
  azureSubscription: '8c3e9034-c540-43a9-90df-10a5b3f1ea97'
  functionAppName: 'fn6ic'
  vmImageName: 'windows-latest'
  workingDirectory: '$(System.DefaultWorkingDirectory)/backend/MyDotNetFunctionApp'
  blobStorageAccount: 'stfn6ic33yjzvn2xqy5a'
  blobContainerName: '$web'
  frontendDirectory: '$(System.DefaultWorkingDirectory)/frontend'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: AzureCLI@2
      displayName: 'Deploy frontend to blob storage'
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: 'ps1'
        scriptLocation: 'inlineScript'
        addSpnToEnvironment: true
        inlineScript: |
          az storage blob upload-batch --account-name "$(blobStorageAccount)" --auth-mode login --source "$(frontendDirectory)" --destination "$(blobContainerName)" --overwrite true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@2
            displayName: 'Azure functions app deploy'
            inputs:
              connectedServiceNameARM: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'